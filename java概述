===========================================================================================================================================
1.认识java（起源于SUN后被Orecle收购）
    java是一门面向对象的编程语言，吸收了c++语言的优点，并摒弃了其多继承、指针等概念。是简单易用的面向对象编程语言。
    java开发分为以下3个方向，javaSE（java platform standard edition）标准版，是javaEE和javaME的基础，包括各种java语言核心类。
 javaEE（java platform enterprise edition）企业版，用于web开发，包含servlet、jsp、xml、事物控制等，是现在java应用的主要方向。javaME（java platform micro edition）小型版，用于嵌入式系统程序的开发，用于智能手机、手机、机顶盒等电子产品软件的开发。（Android SDK是统一性更好，不需要为每台设备配置javaME运行环境）
  
    1995年SUN公司推出java语言，因为其可以解决动态web，而被大量程序员追捧。如今已经历时23年。
    
    java语言特点：
       java语言是简单的：不使用指针，提供自动的垃圾回收机制，使程序员不必担心内存管理问题。
       java语言面向对象：类只支持单继承，但可实现多个接口。
       java语言是分布式的：因其有强大易用的联网能力，即网络应用编程接口（java.net）
       java语言是健壮的：强类型机制、异常处理、垃圾自动收集等特性。丢弃指针和使用安全检查机制使得java更加robust。
       java语言是安全的：安全防范机制，安全检查机制。
       java语言是可移植的：不同平台配备不同版本的jvm，一次编译到处运行，javac.exe是java实现的，java.exe是ANSI C实现的。
       java语言是解释型的：java字节码由jvm解释执行。
       java语言是高性能的：java的运行速度随着JIT编译技术（此处编译值jvm中解释执行前会检测编译部分热点字节码）的发展越来越接近c++。
       java语言是多线程的：很多操作系统将线程视为基本的执行单位，语言支持多行程机制，为开发者带来方便。
       java语言是动态的：适应动态变化的环境，可将新代码加入一个正在运行的程序中。
       
     jdk下载（Oracle官网），配置环境变量JAVA_HOME,并将其加入系统路径Path中，cmd中执行javac或java -version测试环境是否配置好。
     jdk目录介绍：bin（javac.exe、java.exe、jar.exe、jdb.exe、javadoc.exe文档生成工具）
                 db（javaDB）
                 include（启动jdk是需要引入的C语言头文件）
                 jre（jvm、运行时类包等）
                 lib（存放java类库或库文件）
                 javafx-src.zip（java FX所有核心类库的源代码、GUI开发库（swing、SWT、java FX））
                 src.zip（java所有核心类库的源代码）
                 README和LICENSE（说明性文档）
            
     hello world编写过程：1.新建.txt文件,并重命名为类名称的java文件（ByYourself.java）,编写各种class，。2.进入cmd操作界面，d:盘符选择命令、cd 文件名进入该文件存放                          处。3.执行javac进行编译（javac HelloWorld.java），此时同文件下会生成对应类的class文件。4.java文件执行
                        （java 各种class（想运行必须加入main函数入口，否则虽通过编译运行会报错）），直接加类名就行不需带文件名。
                 
                 注意：ByYourself.java文件中，可以有多个类，最终被编译为多个class文件。
     
=========================================================================================================================================

2.java编程基础
     代码块：java中使用{}将语句编组，组中的语句称为代码块。
     注释：只在java源文件中有效，编译时会忽略，不会编译到class文件中去，也因此可以注释某些语句进行调试。
         单行注释：语句前加 //
         多行注释： /* ....  */
         文档注释： /**...   */  对一段代码概括的解释说明，可使用javadoc命令将注释内容提取成正式的帮助文档。
         
         多行注释中可包含单行注释。
     关键字：goto 和 const关键字还未开发称为保留字。 true、false、null是量，不属于关键字，也不能随意乱用。
     进制转换：2进制--10进制：2的几次方。
              10进制--2进制：整数（除2逆序取余）小数（乘2顺序取整）
              2进制--8进制：3位变1位。
              8进制--2进制：1位变3位。
              2进制--16进制：4位变1位。
              16进制--2进制：1位变4位。（从末尾开始不足补0）
     基本数据类型（8种）：整数类型(byte【-2^7,2^7-1】、short【-2^15,2^15-1】、int【-2^31,2^31-1】、long【-2^63,2^63-1】) （1、2、4、8）
              java中直接给出整数类型值默认为int， byte n=100；自动将int类型100当成byte类型处理。
                                           long m=99999；可加L可不加L。long m=9999999999L;超出int取值范围，必须加L后缀。
              浮点类型（float【-3.4*10^38,3.4*10^38】、double【-1.79*10^308,1.79*10^308】）（4、8）
              java中直接给出的浮点型默认为double，double n=10.0；
                                        float x=10.0；将丢失精度赋值错误。
                                        float y=10.0f；
              字符类型（char【0,2^16-1】）java语言采用16的Unicode字符编码集，Unicode为每个字符对应一个统一且唯一的数值，Unicode支持中文字符。
              布尔类型（boolean【true or false】
                                          boolean b=1；不能用非零代表真 错误。
                                          Boolean b=0；不能用零代表假 错误。
      变量名命名规则（常量，变量，包，类，方法）：（1）必须是由字母、数字、下划线_、美元符号“$”组成的字符序列。
                                              （2）不能以数字开头，其他均可。
                                              （3）不能是关键字或保留字。
                                              （4）不能包含空格。（不遵守以上规则，编译通不过）
      变量：申明后，会告诉编译器开辟怎样的内存，并用变量名来方便操作，可以赋值可以不赋值。
             int n=0，q=1；
             double x，y，z；
      变量类型转换：
           （1）自动类型转换：也叫隐式类型转换，条件成立时，自动进行转换。（1）转换的两种数据类型彼此兼容。（2）目标数据类型的取值范围比原类型大。
                            类型转换只限该行语句。任何基本类型的值和字符串进行运算“+”时，都将自动类型转换为字符串类型。
                            
           （2）强制类型转换：也叫显示类型转换。不满足上述两点规则时，需强转。byte a=（byte）128；将3个高位字节丢弃，导致a=-128。
      变量的作用域：是指它的作用范围，变量声明一定会在一对大括号中，该大括号所包含的代码区域就是这个变量的作用域。
      常量：
           整型：
           二进制 0b110 0B110【0/1】
           八进制 0110【0/7】
           十进制 110【0/9】
           十六进制 0x12 0XAbA【0/9 A/F】
           浮点型：
           1.5f 1.5F 1.5d 1.5D【默认】
           5E-8 1.2e+6
           字符型：
           'a'  '0'  
           '\n'  '\t'  '\0' 转义字符
           '\u0000'       u+ Unicode16位值  表示的字符
           字符串：
           "A"  "java"
           布尔：
           true  false
           null常量：
           null  表示对象引用为空
           
           转义序列：java中定义了一种特殊的标记来表示特殊字符，这种标记称为转义序列（由\后面加一个字符或一些数字位组成。一个转义序列被当做一个字符进                    行整体翻译）。
                  常用转义序列如下：
                     \b,退格键，Unicode码为\u0008
                     \t,Tab键，Unicode码为\u0009
                     \n,换行键，Unicode码为\u000A
                     \r,回车键，Unicode码为\u000D
                  有特殊含义的字符需要借助转义序列来表示，如 'java' 【'\'java\''】 "\"java\""【"java"】 \java【'\\java'】  
      运算符：
          算术运算符：+  -  *  /  %   a=1;b=++a;(a=2,b=2) a=1;b=a++;(a=2,b=1)  a=1;b=--a;(a=0;b=0)  a=1;b=a--;(a=0;b=1)
                 10/3【3】  10/0【除数不能为零报错】  10/3.0【3.3333333333333335】  10.0/0【infinity】  -10/0.0【-infinity】
                 5.5%3.2【2.3】   5%0.0【NaN】  -5%0.0【NaN】  0%5.0【0.0】 0%0.0【NaN】 5%0【除数不为零报错】 -5%3【-2】 5%-3【2】
          赋值运算符：=  +=  -=  *=  /=  %=    a+=1【a=a+1】 a*=2【a=a*2】
                 byte b=1； b=b+1【错误，常量1默认为int型，b+1为int型，需要强制转换】 b+=1【正确，自动完成强制类型转换】
          关系运算符：>  >=  <  <=  只支持数值类型比较；==  ！=  额外支持两个Boolean  或引用型的比较。
          逻辑运算符：&  |  ^  ! &&(短路与)  ||（短路或）   用于操作两个布尔型的变量，结果仍然是布尔型的。
                     ^异或表示两个操作数结果相同为false 两个操作数不同为true。
                     &&短路与表示当第一项为false时，第二项不再运算。
                     ||短路或表示当第一项为true时，第二项不再运算。
          位运算符：只能操作整数类型的变量。对于低于int类型的（byte short char）操作数总是自动转化为int类型后再位移。
 
